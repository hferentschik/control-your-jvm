[supervisord]
logfile=/var/log/supervisord/supervisord.log ; supervisord log file
loglevel=debug ; info, debug, warn, trace
pidfile=/var/run/supervisord.pid ; pidfile location
nodaemon=false ; run supervisord as a daemon
minfds=1024 ; number of startup file descriptors
minprocs=200 ; number of process descriptors
user=root ; default user
childlogdir=/var/log/supervisord/ ; where child log files will live

[unix_http_server]
file=/var/run/supervisor.sock ; (the path to the socket file)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL for a unix socket

; Using an Apache server for proxying RMI via HTML/CGI
[program:apache2]
command=/usr/sbin/apache2ctl -D FOREGROUND
environment=APACHE_LOG_DIR=/var/log/apache2
redirect_stderr=true

[program:rmiregistry]
command=rmiregistry -J-Djava.rmi.server.codebase=file:/usr/lib/jvm/java-8-oracle/lib/tools.jar -J-Xbootclasspath/p:/usr/lib/jvm/java-8-oracle/lib/sa-jdi.jar
redirect_stderr=true

; To be able to run jps or jstat from a remote machine jstad must be running
; jstad requires a security policy file to be specified
[program:jstatd]
command=jstatd -J-Djava.security.policy=/demo/jvm-config/all.policy
redirect_stderr=true

[program:java]
command=java -cp /demo Demo 1
redirect_stderr=true

